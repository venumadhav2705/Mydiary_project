<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc          
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <context:component-scan base-package="com.twg.spring.mydiary"/>
    <tx:annotation-driven/>
    <!-- below we have written to say to dispatcher that our static files are in resources file so go and see there  -->
  <!-- below we have written this mvc resources because we are saying to our application that images jsfiles cssfiles are in resouces folder -->
   
   <mvc:annotation-driven/>
    <mvc:resources location="/WEB-INF/resources/" mapping="/resources/**"/>
    
<!-- now we have to configure view resolver -->
<!-- below class name is came from chrome view resolver is an interface so in chrome we have to click on internal view resolver class and copy -->

<bean name="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">

<!-- Using prefix because where we are writing views that path is saved in prefix -->
<property name="prefix">
<value>/WEB-INF/views/</value>
</property>
<!-- in suffix we set jsp file or html file --> 
<property name="suffix">
<value>.jsp</value>
</property>

</bean>

 <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
   <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
   <property name="url" value="jdbc:mysql://localhost:3306/diary"/>
   <property name="username" value="root"/>
   <property name="password" value="SunSun@66"/>
    
    </bean>
    
   <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
   <property name="dataSource">
   <ref bean="dataSource"/>
   </property>
   
  <!--  Here hibernate properties automatically will prepare queries -->
  
   <property name="hibernateProperties">  
   <props>
     <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
     <prop key="hibernate.show_sql">true</prop>
   </props>
   </property>
   
   <property name="annotatedClasses">
   <list>
   <value>com.twg.spring.mydiary.entities.User</value>
   <value>com.twg.spring.mydiary.entities.Entry</value>
   </list>
   </property>
   </bean>
   
   <bean name="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
   <property name="sessionFactory">
   <ref bean="sessionFactory"/> 
   </property>
   </bean>
    
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory">
    <ref bean="sessionFactory"/>
    </property>
    
    </bean>
  </beans>